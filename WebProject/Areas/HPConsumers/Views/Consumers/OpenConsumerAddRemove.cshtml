@model WebProject.Areas.HPConsumers.Models.ConsumerHeaderAddRemoveDataViewModel

@{
    string is_checked = string.Empty; string is_disabled = ViewBag.IsDisabled;
}

<div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title" id="editDataLabel">Редактирование данных потребителя</h3>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="RefreshTable();"></button>
        </div>
        <div class="modal-body">
            <div class="data-block static-block data-params">
                <div class="data-row">
                    <div class="data-item ">
                        <label class="data-label">Уникальный номер потребителя:</label>
                        <select class="selectpicker data-value stretch" data-live-search="true" id="add_remove_gen_info_unom_addr" name="consumer_id" placeholder="Выберите УНОМ потребителя">
                            @foreach (var tz_list in ViewBag.ConsumerNumberAddressList)
                            {
                                if (tz_list.value_id == Model.consumer_id)
                                {
                                    <option value="@tz_list.value_id" selected>@tz_list.value_name</option>
                                }
                                if (tz_list.value_id != Model.consumer_id)
                                {
                                    <option value="@tz_list.value_id">@tz_list.value_name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="data-item ">
                        <label class="data-label">Округ / Район:</label>
                        <input type="text" id="add_remove_gen_info_district_id" value="@Model.add_remove_gen_info_district_name" class="data-value stretch" disabled>
                    </div>
                    <div class="data-item">
                        <label class="data-label ">
                            <span class="data-label">Статус:</span>
                            <input type="text" class="data-value stretch" disabled>
                        </label>
                    </div>
                </div>
                <div class="data-row">
                    <div class="data-item ">
                        <label class="data-label">∑ Q<sub>р</sub>:</label>
                        <input id="consumer_header_Qp_sum_hw" type="text" class="data-value sm-stretch" disabled>
                        <span class="data-unit">Гкал/ч</span>
                        <input id="consumer_header_Qp_sum_steam" type="text" class="data-value sm-stretch" disabled>
                        <span class="data-unit">т/ч</span>
                    </div>
                    <div class="data-item ">
                        <label class="data-label">∑ Q<sub>д</sub>:</label>
                        <input id="consumer_header_Qd_sum_hw" type="text" class="data-value sm-stretch" disabled>
                        <span class="data-unit">Гкал/ч</span>
                        <input id="consumer_header_Qd_sum_steam" type="text" class="data-value sm-stretch" disabled>
                        <span class="data-unit">т/ч</span>
                    </div>
                </div>
            </div>
            <div class="scroll-block-wrapper" style="max-height: 57vh;">
                <div class="data-block scroll-block">
                    <div class="accordion data-block">
                        <div class="border-block">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panel1" aria-expanded="false">Общие сведения</button>
                            <div id="panel1" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    @await Component.InvokeAsync("Consumers_AddRemoveGenInfo_Partial", new {data_status = Model.data_status, consumer_id = Model.consumer_id})
                                </div>
                            </div>
                        </div>
                        <div class="border-block">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panel2" aria-expanded="false">Назначение и категория надежности теплоснабжения</button>
                            <div id="panel2" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    @await Component.InvokeAsync("Consumers_DestRelCatHS_Partial", new {data_status = Model.data_status, consumer_id = Model.consumer_id})
                                </div>
                            </div>
                        </div>
                        <div class="border-block">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panel3" aria-expanded="false">Тепловые нагрузки по договору на теплоснабжение</button>
                            <div id="panel3" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    @await Component.InvokeAsync("Consumers_HeatLoadsSupplyContract_Partial", new {data_status = Model.data_status, consumer_id = Model.consumer_id})
                                </div>
                            </div>
                        </div>
                        <div class="border-block">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panel4" aria-expanded="false">Параметры и расчетные нагрузки по годам реализации схемы</button>
                            <div id="panel4" class="accordion-collapse collapse">
                                <div class="accordion-body" id="year_params_calc_load_partial_div">
                                    @await Component.InvokeAsync("Consumers_YearParamsCalcLoad_Partial", new {data_status = Model.data_status, consumer_id = Model.consumer_id})
                                </div>
                            </div>
                        </div>
                        <div class="border-block">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panel5" aria-expanded="false">Теплопотребление по годам реализации схемы</button>
                            <div id="panel5" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    @await Component.InvokeAsync("Consumers_YearHeatConsumption_Partial", new {data_status = Model.data_status, consumer_id = Model.consumer_id})
                                </div>
                            </div>
                        </div>
                        <div class="border-block">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panel6" aria-expanded="false">Программа развития города (поселения)</button>
                            <div id="panel6" class="accordion-collapse collapse">
                                <div class="accordion-body" id="perspective_dev_partial_div">
                                    @await Component.InvokeAsync("Consumers_PerspectiveDevelopment_Partial", new {data_status = Model.data_status, consumer_id = Model.consumer_id})
                                </div>
                            </div>
                        </div>
                        <div class="border-block">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panel7" aria-expanded="false">Номера и обозначения потребителя в других базах данных</button>
                            <div id="panel7" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    <div class="data-block fix">
                                        @await Component.InvokeAsync("Consumers_NumSignOtherDB_Partial", new {data_status = Model.data_status, consumer_id = Model.consumer_id})
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="bttn" data-bs-dismiss="modal">Отмена</button>
            <button type="button" class="bttn bttn-color" data-bs-dismiss="modal">Создать копию</button>
            <button type="button" class="bttn bttn-color" onclick="RemoveConsumerFromDb(@Model.consumer_id, @Model.data_status)" id="open_consumer_add_remove_del_but" @is_disabled>Удалить</button>
        </div>
    </div>
</div>
<script type="text/javascript" src="@Url.Content("~/hss/js/popup_common_scripts.js")"></script>
<script type="text/javascript">

    $(document).ready(function () {
        let par_elem = document.getElementById("add_remove_gen_info_unom_addr").parentElement;
        par_elem.querySelector("input.form-control[type=search]").addEventListener('keyup', (event) => {
            GetConsumerNumberAddressListByChars(event.target.value, $('#data_status').val());
        });
    });

    function GetConsumerNumberAddressListByChars(input_chars, data_status) {
        if (input_chars.length > 2) {
            $.ajax({
                url: '@Html.Raw(Url.Action("GetConsumerNumberAddressListByChars", "HSS", new { Area = ""}))',
                type: 'POST',
                data: { chars: input_chars, data_status: data_status }
            }).done(function (data) {
                changeSelectByOtherSelectConsumerNumberAddressList(data.list, "add_remove_gen_info_unom_addr", input_chars);
            });
        }
    }

    function changeSelectByOtherSelectConsumerNumberAddressList(newSelect, select_id, input_chars) {
        var select = $('#' + select_id);
        $(select).find('option').remove();
        if (newSelect.length !== 0) {
            for (var i = 0; i < newSelect.length; i++) {
                $(select).append('<option value=' + newSelect[i].value_id + '>' + newSelect[i].value_name + '</option>');
            }
        } else {
            $(select).append('<option value="">' + "Нет записей" + '</option>');
        }
        $(select).selectpicker('destroy');
        $(select).selectpicker();
        $(select).selectpicker('open');
        let par_elem = document.getElementById("add_remove_gen_info_unom_addr").parentElement;
        par_elem.querySelector("input.form-control[type=search]").value = input_chars;
        par_elem.querySelector("input.form-control[type=search]").addEventListener('keyup', (event) => {
            GetConsumerNumberAddressListByChars(event.target.value, $('#data_status').val());
        });
    }

    function RefreshTable() {
        if ($("#refresh_table").val() === "1") {
            GetListOnPage();
        }
    }

    function RemoveConsumerFromDb(consumer_id, data_status) {
        $('#is_deleted_consumer_gen_info').val(true);
        $('#consumers_gen_info_form').submit();
    }

    document.querySelector('#add_remove_gen_info_unom_addr').addEventListener('change', (event) => {
        OpenPopupConsumersAddRemove($('#add_remove_gen_info_unom_addr').val());
    });

</script>